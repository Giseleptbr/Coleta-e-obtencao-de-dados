{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Giseleptbr/Coleta-e-obtencao-de-dados/blob/main/Coleta%20e%20obten%C3%A7%C3%A3o%20de%20dados%20spark\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p7FQaEqM3awT",
        "outputId": "04287d19-0ade-450d-a87e-45d36ba7ad22"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n",
            "Collecting pyspark\n",
            "  Downloading pyspark-3.4.1.tar.gz (310.8 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m310.8/310.8 MB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: py4j==0.10.9.7 in /usr/local/lib/python3.10/dist-packages (from pyspark) (0.10.9.7)\n",
            "Building wheels for collected packages: pyspark\n",
            "  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pyspark: filename=pyspark-3.4.1-py2.py3-none-any.whl size=311285397 sha256=c2a62976533d9917fe4384acca0b6f18f160b60b42ce1273224a22540ad4a553\n",
            "  Stored in directory: /root/.cache/pip/wheels/0d/77/a3/ff2f74cc9ab41f8f594dabf0579c2a7c6de920d584206e0834\n",
            "Successfully built pyspark\n",
            "Installing collected packages: pyspark\n",
            "Successfully installed pyspark-3.4.1\n",
            "Cloning into 'TP-M2-ABD'...\n",
            "remote: Enumerating objects: 369, done.\u001b[K\n",
            "remote: Counting objects: 100% (369/369), done.\u001b[K\n",
            "remote: Compressing objects: 100% (366/366), done.\u001b[K\n",
            "remote: Total 369 (delta 2), reused 369 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (369/369), 488.65 KiB | 2.27 MiB/s, done.\n",
            "Resolving deltas: 100% (2/2), done.\n",
            "+----------+-----------+---------+---------------+----------------+--------+---------------+------------------+\n",
            "|cod_pessoa|data_coleta|   genero|data_nascimento|animal_estimacao|   clima|bebida_favorita|           hobbies|\n",
            "+----------+-----------+---------+---------------+----------------+--------+---------------+------------------+\n",
            "|  10141849| 2020-11-02| Feminino|     1999-10-13|       tartaruga|    frio|            Chá|Aprender algo novo|\n",
            "|  10142096| 2020-11-02| Feminino|     1974-06-28|        cachorro|  quente|            Chá|       Assistir TV|\n",
            "|  10142258| 2020-11-02|Masculino|     1971-01-17|        cachorro|  quente|        Cerveja|          Escrever|\n",
            "|  10142771| 2020-11-02|Masculino|     1971-06-15|       tartaruga|    frio|            Chá|        Ler livros|\n",
            "|  10142934| 2020-11-02|Masculino|     1967-11-05|            gato|  quente|        Cerveja|Aprender algo novo|\n",
            "|  10143354| 2020-11-02|Masculino|     1996-04-23|            gato|    frio|   refrigerante|    Escutar música|\n",
            "|  10143444| 2020-11-02| Feminino|     1961-01-10|        cachorro|moderado|           Café|            Dormir|\n",
            "|  10143518| 2020-11-02|Masculino|     1993-04-20|       tartaruga|moderado|          Vinho|    Escutar música|\n",
            "|  10141632| 2020-11-18| Feminino|     1960-01-30|            gato|  quente|        Cerveja|    Escutar música|\n",
            "|  10141688| 2020-11-18| Feminino|     1961-06-14|       tartaruga|  quente|            Chá|        Ler livros|\n",
            "|  10141727| 2020-11-18| Feminino|     1975-12-26|       tartaruga|moderado|   refrigerante|    Pintar quadros|\n",
            "|  10141982| 2020-11-18|Masculino|     1994-07-16|            gato|moderado|           Água|        Ler livros|\n",
            "|  10142078| 2020-11-18| Feminino|     1991-08-21|            gato|  quente|           Café|            Dormir|\n",
            "|  10142579| 2020-11-18|Masculino|     1994-07-23|            gato|  quente|            Chá|        Ler livros|\n",
            "|  10142829| 2020-11-18|Masculino|     1979-12-25|        cachorro|moderado|        Cerveja|    Pintar quadros|\n",
            "|  10142296| 2020-05-17|Masculino|     1976-10-29|            gato|moderado|          Vinho|    Escutar música|\n",
            "|  10142709| 2020-05-17|Masculino|     1977-10-11|            gato|moderado|           Água|        Ler livros|\n",
            "|  10143578| 2020-05-17|Masculino|     1986-12-16|        cachorro|moderado|        Cerveja|  Praticar esporte|\n",
            "|  10141543| 2020-07-07|Masculino|     1977-10-07|           peixe|    frio|           Café|  Praticar esporte|\n",
            "|  10141591| 2020-07-07| Feminino|     1970-10-13|        cachorro|  quente|        Cerveja|        Ler livros|\n",
            "+----------+-----------+---------+---------------+----------------+--------+---------------+------------------+\n",
            "only showing top 20 rows\n",
            "\n",
            "+------------------+-----+\n",
            "|           hobbies|count|\n",
            "+------------------+-----+\n",
            "|    Escutar música|  153|\n",
            "|    Pintar quadros|  171|\n",
            "|       Assistir TV|  173|\n",
            "|  Praticar esporte|  175|\n",
            "|        Ler livros|  177|\n",
            "|          Escrever|  182|\n",
            "|Aprender algo novo|  183|\n",
            "|            Dormir|  184|\n",
            "+------------------+-----+\n",
            "\n",
            "+------------------+-----+\n",
            "|           hobbies|count|\n",
            "+------------------+-----+\n",
            "|            Dormir|   39|\n",
            "|          Escrever|   39|\n",
            "|    Escutar música|   38|\n",
            "|       Assistir TV|   38|\n",
            "|  Praticar esporte|   37|\n",
            "|Aprender algo novo|   35|\n",
            "|        Ler livros|   29|\n",
            "|    Pintar quadros|   24|\n",
            "+------------------+-----+\n",
            "\n",
            "+---------------+-----+\n",
            "|bebida_favorita|count|\n",
            "+---------------+-----+\n",
            "|           Café|  258|\n",
            "+---------------+-----+\n",
            "only showing top 1 row\n",
            "\n",
            "+---------------+-----+\n",
            "|bebida_favorita|count|\n",
            "+---------------+-----+\n",
            "|        Cerveja|  138|\n",
            "+---------------+-----+\n",
            "only showing top 1 row\n",
            "\n",
            "+------------------+\n",
            "|          avg(age)|\n",
            "+------------------+\n",
            "|46.857142857142854|\n",
            "+------------------+\n",
            "\n",
            "+----------+-----------------+\n",
            "|Quantidade|   Média de idade|\n",
            "+----------+-----------------+\n",
            "|       263|47.14448669201521|\n",
            "+----------+-----------------+\n",
            "\n",
            "+----------------+-----+\n",
            "|animal_estimacao|count|\n",
            "+----------------+-----+\n",
            "|            gato|   11|\n",
            "+----------------+-----+\n",
            "only showing top 1 row\n",
            "\n",
            "A pessoa mais velha tem 73 anos.\n",
            "Há 29 pessoas com a idade máxima de 73 anos.\n",
            "+----------------+-----+\n",
            "|animal_estimacao|count|\n",
            "+----------------+-----+\n",
            "|        cachorro|  143|\n",
            "|       tartaruga|  149|\n",
            "|           peixe|  158|\n",
            "|            gato|  279|\n",
            "+----------------+-----+\n",
            "\n",
            "+----------------+-----+\n",
            "|animal_estimacao|count|\n",
            "+----------------+-----+\n",
            "|        cachorro|  143|\n",
            "+----------------+-----+\n",
            "only showing top 1 row\n",
            "\n",
            "723\n",
            "+-----------------+\n",
            "|         avg(age)|\n",
            "+-----------------+\n",
            "|47.99059708509638|\n",
            "+-----------------+\n",
            "\n",
            "+------------------+-----+\n",
            "|           hobbies|count|\n",
            "+------------------+-----+\n",
            "|            Dormir|   39|\n",
            "|          Escrever|   39|\n",
            "|    Escutar música|   38|\n",
            "|       Assistir TV|   38|\n",
            "|  Praticar esporte|   37|\n",
            "|Aprender algo novo|   35|\n",
            "|        Ler livros|   29|\n",
            "|    Pintar quadros|   24|\n",
            "+------------------+-----+\n",
            "\n",
            "+------------------+-----+\n",
            "|           hobbies|count|\n",
            "+------------------+-----+\n",
            "|            Dormir|  125|\n",
            "|          Escrever|  118|\n",
            "|  Praticar esporte|  113|\n",
            "|Aprender algo novo|  112|\n",
            "|        Ler livros|  109|\n",
            "|       Assistir TV|  101|\n",
            "|    Escutar música|   97|\n",
            "|    Pintar quadros|   89|\n",
            "+------------------+-----+\n",
            "\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n",
        "\n",
        "!pip install pyspark\n",
        "\n",
        "!git clone https://github.com/ProfLeandroLessa/TP-M2-ABD.git\n",
        "\n",
        "from pyspark.sql import SparkSession\n",
        "from pyspark.sql.functions import year, month, dayofmonth, to_date, lit, avg, datediff, count, col, desc, max, when\n",
        "import os\n",
        "\n",
        "# Função para calcular a idade\n",
        "def calculate_age(birth_date, current_date):\n",
        "    return (\n",
        "        (year(current_date) - year(birth_date))\n",
        "        - when(\n",
        "            (month(birth_date) > month(current_date))\n",
        "            | ((month(birth_date) == month(current_date)) & (dayofmonth(birth_date) > dayofmonth(current_date))),\n",
        "            1\n",
        "        ).otherwise(0)\n",
        "    )\n",
        "\n",
        "# Inicia uma sessão Spark\n",
        "spark = SparkSession.builder.master(\"local[*]\").getOrCreate()\n",
        "\n",
        "# Define o diretório dos arquivos CSV\n",
        "directory = '/content/TP-M2-ABD/datasets'\n",
        "\n",
        "# Lista os arquivos CSV\n",
        "csv_files = [f for f in os.listdir(directory) if f.endswith('.csv')]\n",
        "\n",
        "# Inicia o DataFrame com o primeiro arquivo CSV\n",
        "df = spark.read.csv(f'{directory}/{csv_files[0]}', inferSchema=True, header=True, encoding='ISO-8859-1', sep=\"|\")\n",
        "\n",
        "# Adiciona os restantes dos arquivos CSV ao DataFrame\n",
        "for file in csv_files[1:]:\n",
        "    df = df.union(spark.read.csv(f'{directory}/{file}', inferSchema=True, header=True, encoding='ISO-8859-1', sep=\"|\"))\n",
        "\n",
        "df.show()\n",
        "\n",
        "df.filter(df.genero == \"Masculino\").groupBy(\"hobbies\").count().orderBy(\"count\").show(8)\n",
        "\n",
        "df.filter((df.genero == \"Feminino\") & (df.animal_estimacao == \"gato\")).groupBy(\"hobbies\").count().orderBy(desc(\"count\")).show(8)\n",
        "\n",
        "df.filter(df.genero == \"Masculino\").groupBy(\"bebida_favorita\").count().orderBy(desc(\"count\")).show(1)\n",
        "\n",
        "df.filter(df.genero == \"Feminino\").groupBy(\"bebida_favorita\").count().orderBy(desc(\"count\")).show(1)\n",
        "\n",
        "current_date_literal = to_date(lit(\"2023-08-04\"))\n",
        "df_with_age = df.withColumn(\"age\", calculate_age(to_date(df.data_nascimento, \"yyyy-MM-dd\"), current_date_literal))\n",
        "\n",
        "# Bebida favorita dos homens que gostam de Chá, clima frio e têm cachorro como animal de estimação\n",
        "df_with_age.filter(\n",
        "    (df_with_age.genero == \"Masculino\") &\n",
        "    (df_with_age.bebida_favorita == \"Chá\") &\n",
        "    (df_with_age.clima == \"frio\") &\n",
        "    (df_with_age.animal_estimacao == \"cachorro\")\n",
        ").select(avg(\"age\")).show()\n",
        "\n",
        "df_with_age.filter(df_with_age.hobbies == \"Assistir TV\").agg(\n",
        "    count(col(\"cod_pessoa\")).alias(\"Quantidade\"),\n",
        "    avg(col(\"age\")).alias(\"Média de idade\")\n",
        ").show()\n",
        "\n",
        "# Encontre a idade da pessoa mais velha\n",
        "max_age = df_with_age.select(max(col(\"age\"))).first()[0]\n",
        "\n",
        "# Filtre para incluir apenas as pessoas mais velhas\n",
        "oldest_people = df_with_age.filter(df_with_age.age == max_age)\n",
        "\n",
        "# Encontre o animal de estimação mais preferido entre as pessoas mais velhas\n",
        "oldest_people.groupBy(\"animal_estimacao\").count().orderBy(desc(\"count\")).show(1)\n",
        "\n",
        "print(f\"A pessoa mais velha tem {max_age} anos.\")\n",
        "\n",
        "# Conte o número de pessoas com a idade máxima\n",
        "num_oldest_people = oldest_people.count()\n",
        "print(f\"Há {num_oldest_people} pessoas com a idade máxima de {max_age} anos.\")\n",
        "\n",
        "df.filter(df.genero == \"Feminino\").groupBy(\"animal_estimacao\").count().orderBy(\"count\").show(4)\n",
        "df.filter(df.genero == \"Feminino\").groupBy(\"animal_estimacao\").count().orderBy(\"count\").show(1)\n",
        "print(df.filter(df.clima == \"frio\").count())\n",
        "\n",
        "df_with_age.select(avg(\"age\")).show()\n",
        "\n",
        "df.filter((df.genero == \"Feminino\") & (df.animal_estimacao == \"gato\")).groupBy(\"hobbies\").count().orderBy(desc(\"count\")).show()\n",
        "df.filter(df.animal_estimacao == \"gato\").groupBy(\"hobbies\").count().orderBy(col(\"count\").desc()).show()"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "zGPJ5-Fbesit"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "aKxgitJ8esrW"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}